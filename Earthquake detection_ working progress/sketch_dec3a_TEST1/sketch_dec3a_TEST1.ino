#include <Adafruit_NeoPixel.h>
#include <Adafruit_GFX.h>
#include <Adafruit_SSD1306.h>

// Vibration sensor setup
int vs = 9;

// NeoPixel setup
#define PIN 6
#define NUMPIXELS 8
Adafruit_NeoPixel pixels(NUMPIXELS, PIN);

// OLED setup
#define SCREEN_I2C_ADDR 0x3C // or 0x3C
#define SCREEN_WIDTH 128     // OLED display width, in pixels
#define SCREEN_HEIGHT 64     // OLED display height, in pixels
#define OLED_RST_PIN -1      // Reset pin (-1 if not available)
Adafruit_SSD1306 display(128, 64, &Wire, OLED_RST_PIN);

// OLED Animation
#define FRAME_DELAY (42)
#define FRAME_WIDTH (32)
#define FRAME_HEIGHT (32)
#define FRAME_COUNT (sizeof(frames) / sizeof(frames[0]))
const byte PROGMEM frames[][128] = {
  {0,0,0,0,0,0,0,0,0,0,0,0,0,1,128,0,0,3,192,0,0,2,64,0,0,6,96,0,0,4,32,0,0,12,48,0,0,24,24,0,0,16,8,0,0,48,12,0,0,33,132,0,0,97,134,0,0,193,131,0,0,129,129,0,1,129,129,128,1,1,128,128,3,1,128,192,2,1,128,64,6,1,128,96,12,1,128,48,8,0,0,16,24,0,0,24,16,1,128,8,48,1,128,12,32,0,0,4,64,0,0,2,192,0,0,3,255,255,255,255,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,1,128,0,0,3,192,0,0,2,64,0,0,6,96,0,0,4,32,0,0,12,48,0,0,24,24,0,0,16,8,0,0,48,12,0,0,33,132,0,0,97,134,0,0,193,131,0,0,129,129,0,1,129,129,128,1,1,128,128,3,1,128,192,2,1,128,64,6,1,128,96,12,1,128,48,8,0,0,16,24,0,0,24,16,1,128,8,48,1,128,12,32,0,0,4,64,0,0,2,192,0,0,3,255,255,255,255,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,1,128,0,0,3,192,0,0,2,64,0,0,6,96,0,0,4,32,0,0,12,48,0,0,24,24,0,0,16,8,0,0,48,12,0,0,33,132,0,0,97,134,0,0,193,131,0,0,129,129,0,1,129,129,128,1,1,128,128,3,1,128,192,2,1,128,64,6,1,128,96,12,1,128,48,8,0,0,16,24,0,0,24,16,1,128,8,48,1,128,12,32,0,0,4,64,0,0,2,192,0,0,3,255,255,255,255,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,1,128,0,0,3,192,0,0,2,64,0,0,6,96,0,0,4,32,0,0,12,48,0,0,24,24,0,0,16,8,0,0,48,12,0,0,33,132,0,0,97,134,0,0,193,131,0,0,129,129,0,1,129,129,128,1,1,128,128,3,1,128,192,2,1,128,64,6,1,128,96,12,1,128,48,8,0,0,16,24,0,0,24,16,1,128,8,48,1,128,12,32,0,0,4,64,0,0,2,192,0,0,3,255,255,255,255,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,1,128,0,0,3,192,0,0,2,64,0,0,6,96,0,0,4,32,0,0,12,48,0,0,24,24,0,0,16,8,0,0,48,12,0,0,33,132,0,0,97,134,0,0,193,131,0,0,129,129,0,1,129,129,128,1,1,128,128,3,1,128,192,2,1,128,64,6,1,128,96,12,1,128,48,8,0,0,16,24,0,0,24,16,1,128,8,48,1,128,12,32,0,0,4,64,0,0,2,192,0,0,3,255,255,255,255,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,1,128,0,0,3,192,0,0,2,64,0,0,6,96,0,0,4,32,0,0,12,48,0,0,24,24,0,0,16,8,0,0,48,12,0,0,33,132,0,0,97,134,0,0,193,131,0,0,129,129,0,1,129,129,128,1,1,128,128,3,1,128,192,2,1,128,64,6,1,128,96,12,1,128,48,8,0,0,16,24,0,0,24,16,1,128,8,48,1,128,12,32,0,0,4,64,0,0,2,192,0,0,3,255,255,255,255,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,1,128,0,0,3,192,0,0,2,64,0,0,6,96,0,0,4,32,0,0,12,48,0,0,24,24,0,0,16,8,0,0,48,12,0,0,33,132,0,0,97,134,0,0,193,131,0,0,129,129,0,1,129,129,128,1,1,128,128,3,1,128,192,2,1,128,64,6,1,128,96,12,1,128,48,8,0,0,16,24,0,0,24,16,1,128,8,48,1,128,12,32,0,0,4,64,0,0,2,192,0,0,3,255,255,255,255,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,128,0,0,3,192,0,0,2,64,0,0,6,96,0,0,4,32,0,0,12,48,0,0,8,16,0,0,16,8,0,0,48,12,0,0,33,132,0,0,97,134,0,0,65,130,0,0,193,131,0,0,129,129,0,1,1,128,128,3,1,128,192,2,1,128,64,6,0,0,96,4,0,0,32,12,1,128,48,8,1,128,16,16,0,0,8,48,0,0,12,63,255,255,252,63,255,255,252,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,128,0,0,1,128,0,0,2,64,0,0,0,0,0,0,4,32,0,0,0,0,0,0,9,144,0,0,17,136,0,0,17,136,0,0,33,132,0,0,1,128,0,0,64,2,0,0,0,0,0,0,128,1,0,1,0,0,128,1,0,0,128,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,32,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,128,0,0,1,128,0,0,2,64,0,0,2,64,0,0,4,32,0,0,4,32,0,0,8,16,0,0,17,136,0,0,17,136,0,0,33,132,0,0,33,132,0,0,65,130,0,0,0,0,0,0,128,1,0,1,1,128,128,1,0,0,128,2,0,0,64,3,255,255,192,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,128,0,0,1,128,0,0,2,64,0,0,6,96,0,0,4,32,0,0,8,16,0,0,8,16,0,0,16,8,0,0,49,140,0,0,33,132,0,0,97,134,0,0,65,130,0,0,129,129,0,0,129,129,0,1,1,128,128,3,1,128,192,2,0,0,64,4,0,0,32,4,1,128,32,8,0,0,16,24,0,0,16,16,0,0,8,31,255,255,248,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,128,0,0,1,192,0,0,3,64,0,0,2,96,0,0,4,32,0,0,12,48,0,0,8,16,0,0,16,8,0,0,48,8,0,0,33,132,0,0,97,134,0,0,65,130,0,0,129,131,0,1,129,129,0,1,1,129,128,3,1,128,128,2,1,128,64,4,0,0,64,12,0,0,32,8,1,128,32,24,1,128,16,16,0,0,24,32,0,0,8,127,255,0,12,0,31,255,252,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,192,0,0,1,192,0,0,3,96,0,0,2,32,0,0,6,48,0,0,12,16,0,0,8,16,0,0,24,8,0,0,48,8,0,0,33,132,0,0,97,132,0,0,193,130,0,0,129,130,0,1,129,129,0,3,1,129,0,2,1,128,128,6,1,128,128,12,0,0,64,8,0,0,64,24,1,128,32,48,1,128,32,32,0,0,16,96,0,0,16,127,254,0,8,0,7,255,248,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,192,0,0,1,192,0,0,1,96,0,0,2,32,0,0,6,48,0,0,4,16,0,0,8,24,0,0,24,8,0,0,48,12,0,0,33,132,0,0,97,132,0,0,193,130,0,0,129,130,0,1,1,129,0,3,1,129,0,2,1,128,128,4,1,128,128,12,0,0,192,24,0,0,64,16,1,128,96,48,1,128,32,96,0,0,48,112,0,0,16,127,254,0,24,0,7,255,216,0,0,0,56,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,128,0,0,1,192,0,0,3,64,0,0,2,32,0,0,4,32,0,0,12,16,0,0,8,16,0,0,24,8,0,0,49,136,0,0,33,132,0,0,97,132,0,0,65,130,0,0,129,131,0,1,129,129,0,1,1,129,128,2,1,128,128,6,1,128,192,4,0,0,64,12,0,0,96,8,1,128,32,16,1,128,48,48,0,0,16,32,0,0,24,127,255,0,8,0,7,255,252,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,3,128,0,0,2,192,0,0,4,64,0,0,4,32,0,0,8,48,0,0,8,16,0,0,16,24,0,0,17,140,0,0,33,132,0,0,97,134,0,0,65,130,0,0,193,129,0,0,129,129,128,1,129,128,128,1,1,128,64,3,1,128,96,2,0,0,32,6,0,0,48,4,1,128,16,12,1,128,8,8,0,0,12,24,0,0,4,16,0,255,254,63,255,224,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,3,128,0,0,6,128,0,0,4,64,0,0,12,96,0,0,8,32,0,0,24,16,0,0,16,24,0,0,49,140,0,0,33,132,0,0,33,134,0,0,65,131,0,0,65,129,0,0,129,128,128,0,129,128,192,1,1,128,64,1,1,128,32,3,1,128,48,2,0,0,24,6,0,0,8,4,1,128,12,12,0,0,6,8,0,0,14,24,0,127,254,27,255,224,0,28,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,3,0,0,0,2,128,0,0,6,192,0,0,4,64,0,0,12,32,0,0,8,48,0,0,24,16,0,0,16,8,0,0,49,140,0,0,33,132,0,0,97,130,0,0,65,131,0,0,193,129,0,0,129,128,128,1,129,128,192,1,1,128,64,3,1,128,32,2,1,128,48,6,0,0,16,4,0,0,8,12,1,128,12,8,1,128,4,24,0,0,2,16,0,1,255,49,255,255,224,63,224,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,1,128,0,0,3,128,0,0,2,192,0,0,6,96,0,0,4,32,0,0,12,48,0,0,24,16,0,0,16,24,0,0,48,12,0,0,33,132,0,0,97,134,0,0,65,130,0,0,193,131,0,0,129,129,128,1,129,128,128,1,1,128,192,2,1,128,64,6,1,128,96,4,1,128,48,12,0,0,16,8,1,0,24,24,1,128,8,16,1,128,12,48,0,0,6,32,0,0,2,96,0,255,255,127,255,255,254,0,0,0,0,0,0,0,0}
};


void setup() {
  // Initialize vibration sensor
  pinMode(vs, INPUT); 
  Serial.begin(9600);

  // Initialize NeoPixels
  pixels.begin();

  // Initialize OLED display
  display.begin(SSD1306_SWITCHCAPVCC, SCREEN_I2C_ADDR);
}

long vibration() {
  long measurement = pulseIn(vs, HIGH); // Wait for the pin to get HIGH and returns measurement
  return measurement;
}

int frame = 0;

void loop() {
  long measurement = vibration();
  delay(50);
  Serial.println(measurement);

  if (measurement > 50) {
    // If vibration detected, light up NeoPixels
    for (int i = 0; i < NUMPIXELS; i++) {
      pixels.setPixelColor(i, 150, 0, 0); // Red color
      pixels.show();
      delay(500); // Delay between each pixel lighting up
    }

    // Start displaying the OLED animation
    display.clearDisplay();
    display.drawBitmap(48, 16, frames[frame], FRAME_WIDTH, FRAME_HEIGHT, 1);
    display.display();
    frame = (frame + 1) % FRAME_COUNT;
    
    // Extend the display time for each frame
    delay(FRAME_DELAY * 20); // Adjust the multiplier as needed for longer display time
  } else {
    // No vibration detected, turn off NeoPixels and OLED display
    pixels.clear();
    pixels.show();

    display.clearDisplay();
    display.display();
  }
}

